services:

  db:
    image: "postgres:16.0"
    container_name: library-postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - library_postgres_data:/var/lib/postgresql/data/
    networks:
      - library-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  backend:
    container_name: library-backend
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    entrypoint: ["sh", "/app/docker/backend/server-entrypoint.sh"]
    working_dir: /app/backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/backend
      - library_static_volume:/app/backend/static
      - library_media_volume:/app/backend/media
    networks:
      - library-network
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/api/health/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  library_static_volume:
  library_media_volume:
  library_postgres_data:
    driver: local

networks:
  library-network:
    driver: bridge
